/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
            flavor = "balanced";
        };

        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
            flavor = "tap-preferred";
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q                 &kp W             &kp E             &kp R               &kp T         &kp Y      &kp U                &kp I              &kp O             &kp P                          &kp BSPC
&lt 5 ESCAPE    &hrml LEFT_CONTROL A  &hrml LEFT_ALT S  &hrml LEFT_GUI D  &hrml LEFT_SHIFT F  &kp G         &kp H      &hrmr RIGHT_SHIFT J  &hrmr RIGHT_GUI K  &hrmr LEFT_ALT L  &hrmr RIGHT_CONTROL SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z                 &kp X             &kp C             &kp V               &kp B         &kp N      &kp M                &kp COMMA          &kp DOT           &kp FSLH                       &kp MINUS
                                                        &mo 3             &mo 2               &kp RETURN    &kp SPACE  &mo 1                &mo 4
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1  &kp N2  &kp N3  &kp N4  &kp N5        &kp N6     &kp N7  &kp N8  &kp N9  &kp N0   &kp BSPC
&kp ESCAPE  &trans  &trans  &trans  &trans  &trans        &trans     &trans  &trans  &trans  &trans   &trans
&kp LSHFT   &kp F1  &kp F2  &kp F3  &kp F4  &kp F5        &kp F6     &kp F7  &kp F8  &kp F9  &kp F10  &trans
                            &trans  &trans  &kp RETURN    &kp SPACE  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT     &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR          &kp RPAR           &kp BSPC
&kp ESCAPE  &trans    &trans  &trans    &trans    &trans        &kp MINUS  &kp EQUAL  &kp BACKSLASH    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GRAVE
&kp LSHFT   &trans    &trans  &trans    &trans    &trans        &kp UNDER  &kp PLUS   &kp PIPE         &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp TILDE
                              &trans    &trans    &kp RETURN    &kp SPACE  &trans     &trans
            >;
        };

        workflow_macros {
            bindings = <
&kp LG(TAB)  &kp RC(NUMBER_1)  &kp RC(NUMBER_2)  &kp RC(NUMBER_3)  &kp RC(NUMBER_4)  &kp RC(NUMBER_5)    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans            &trans            &trans            &trans            &trans              &trans  &trans  &trans  &trans  &trans  &trans
                                                 &trans            &trans            &trans              &trans  &trans  &trans
            >;
        };

        misc {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans            &trans        &trans        &trans        &trans
                        &trans  &trans  &trans    &trans      &trans            &trans
            >;
        };

        text-nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &kp PAGE_UP      &kp HOME       &kp END           &kp PAGE_DOWN  &kp DELETE
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW   &kp UP_ARROW   &kp RIGHT_ARROW   &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &kp EXCLAMATION  &kp LESS_THAN  &kp GREATER_THAN  &kp EQUAL      &trans
                        &trans  &trans  &trans    &trans          &trans           &trans
            >;
        };
    };
};
